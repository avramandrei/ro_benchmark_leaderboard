{"version":3,"sources":["Components/UrlBuilder.js","Components/Homepage.js","assets/icons.js","Components/TaskDetails.js","Components/ScatterPlot.js","Components/PlotBuilder.js","Components/DatasetDetails.js","Components/Dashboard.js","Components/Menu.js","Components/Header.js","App.js","index.js"],"names":["UrlBuilder","this","basePath","url","toLowerCase","task","id","normalizeUrl","dataset","Homepage","props","urlBuilder","state","activeArea","name","setState","key","submission_count","summary","dataset_count","href","buildTaskUrl","className","renderTaskSubmissions","area","tasks","isTileOpened","onClick","updateactiveArea","isOpened","map","currentTask","renderAreaTask","areas","data","defaultArea","renderArea","React","Component","LogoIcon","viewBox","width","height","fillRule","d","CodeIcon","PaperIcon","CheckIcon","CrossIcon","TaskDetails","taskId","match","params","find","t","dataset_name","dataset_id","model_name","paper_title","paper_link","source_link","target","rel","buildDatasetUrl","datasets","length","ds","renderModelRow","task_name","task_description","renderTaskDatasets","ScatterPlot","svgRef","createRef","timeRange","dataPoints","drawScatterPlot","xScaleDomain","svg","select","current","attr","selectAll","remove","yValue","score","margin","innerWidth","innerHeight","xScale","scalePoint","domain","range","yScale","scaleLinear","extent","nice","g","append","xAxis","axisBottom","tickSize","tickPadding","yAxis","axisLeft","yAxisG","call","text","xAxisG","tooltip","style","enter","submissionDate","xValue","on","evt","html","model","clientX","clientY","transition","duration","ref","PlotBuilder","handleSelectedMetricChange","bind","canvas","onWindowResize","time_range","buildDataPoints","preferred_metric","undefined","window","addEventListener","removeEventListener","metric","data_points","p","submission_date","bounds","getBoundingClientRect","e","console","log","value","htmlFor","defaultValue","onChange","metrics","m","DatasetDetails","datasetId","results","extra_training_data","models","renderModel","ReactHtmlParser","dataset_description","dataset_link","renderModels","Dashboard","location","exact","path","taskUrlTemplate","component","datasetUrlTemplate","Menu","Header","Navbar","bg","variant","Brand","App","ReactDOM","render","basename","document","getElementById"],"mappings":"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","file":"static/js/main.eba44992.chunk.js","sourcesContent":["class UrlBuilder {\n  constructor() {\n    this.basePath = '/ro_benchmark_leaderboard';\n  }\n\n  static get taskUrlTemplate() {\n    return '/task/:id';\n  }\n  static get datasetUrlTemplate() {\n    return '/dataset/:id';\n  }\n\n  normalizeUrl(url) {\n    return url.toLowerCase();\n  }\n\n  buildTaskUrl(task) {\n    const { id } = task;\n    var url = this.basePath + '/task/' + id;\n    return this.normalizeUrl(url);\n  }\n\n  buildDatasetUrl(dataset) {\n    const { id } = dataset;\n    var url = this.basePath + '/dataset/' + id;\n    return this.normalizeUrl(url);\n  }\n}\n\nexport default UrlBuilder;\n","import React from 'react';\nimport { Collapse } from 'react-collapse';\nimport data from '../data/homepage.json';\nimport './Homepage.scss';\nimport UrlBuilder from './UrlBuilder.js';\n\nclass Homepage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.urlBuilder = new UrlBuilder();\n    this.state = {\n      activeArea: null,\n    };\n  }\n\n  updateactiveArea(name) {\n    const { activeArea } = this.state;\n    this.setState({\n      activeArea: name !== activeArea ? name : null,\n    });\n  }\n\n  renderDataset(dataset) {\n    return (\n      <tr key={dataset.dataset}>\n        <td>{dataset.dataset}</td>\n        <td>{dataset.submission_count}</td>\n      </tr>\n    );\n  }\n\n  renderTaskSubmissions(task) {\n    if (!task.summary) {\n      return <span>No submissions</span>;\n    }\n    const { summary } = task;\n    return (\n      <table>\n        <tbody>\n          <tr>\n            <td>{summary.dataset_count}</td>\n            <td>{summary.dataset_count === 1 ? 'dataset' : 'datasets'}</td>\n          </tr>\n          <tr>\n            <td>{summary.submission_count}</td>\n            <td>{summary.submission_count === 1 ? 'submission' : 'submissions'}</td>\n          </tr>\n        </tbody>\n      </table>\n    );\n  }\n\n  renderAreaTask(task) {\n    return (\n      <a href={this.urlBuilder.buildTaskUrl(task)} className=\"task-tile-link\">\n        <div className=\"task-tile\" key={task.name}>\n          <h5>{task.name}</h5>\n          <div className=\"task-data\">{this.renderTaskSubmissions(task)}</div>\n        </div>\n      </a>\n    );\n  }\n\n  renderArea(area) {\n    const { activeArea } = this.state;\n    const { tasks, name } = area;\n\n    const isTileOpened = activeArea === name;\n\n    return (\n      <div key={area.name} className=\"tile-wrapper\">\n        <div onClick={() => this.updateactiveArea(name)} className=\"collapse-trigger\">\n          <h4>{area.name}</h4>\n        </div>\n        <Collapse isOpened={isTileOpened}>\n          <div className=\"task-wrapper\">\n            {tasks.map((currentTask) => this.renderAreaTask(currentTask))}\n            <div className=\"clear\" />\n          </div>\n        </Collapse>\n      </div>\n    );\n  }\n\n  render() {\n    const { areas } = data;\n    if (!this.state.activeArea) {\n      const defaultArea = areas[0];\n      this.state.activeArea = defaultArea.name;\n    }\n    return areas.map((area) => this.renderArea(area));\n  }\n}\n\nexport default Homepage;\n","import React from 'react';\n\nexport const LogoIcon = () => (\n  <svg viewBox=\"0 0 16 16\" width=\"16\" height=\"16\">\n    <path\n      fillRule=\"evenodd\"\n      d=\"M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0016 8c0-4.42-3.58-8-8-8z\"\n    ></path>\n  </svg>\n);\n\nexport const GraphIcon = () => (\n  <svg viewBox=\"0 0 16 16\" width=\"16\" height=\"16\">\n    <path\n      fillRule=\"evenodd\"\n      d=\"M1.5 1.75a.75.75 0 00-1.5 0v12.5c0 .414.336.75.75.75h14.5a.75.75 0 000-1.5H1.5V1.75zm14.28 2.53a.75.75 0 00-1.06-1.06L10 7.94 7.53 5.47a.75.75 0 00-1.06 0L3.22 8.72a.75.75 0 001.06 1.06L7 7.06l2.47 2.47a.75.75 0 001.06 0l5.25-5.25z\"\n    ></path>\n  </svg>\n);\n\nexport const CodeIcon = () => (\n  <svg viewBox=\"0 0 512 512\" width=\"16\" height=\"16\">\n    <path\n      fillRule=\"evenodd\"\n      d=\"M256 32C132.3 32 32 134.9 32 261.7c0 101.5 64.2 187.5 153.2 217.9a17.56 17.56 0 003.8.4c8.3 0 11.5-6.1 11.5-11.4 0-5.5-.2-19.9-.3-39.1a102.4 102.4 0 01-22.6 2.7c-43.1 0-52.9-33.5-52.9-33.5-10.2-26.5-24.9-33.6-24.9-33.6-19.5-13.7-.1-14.1 1.4-14.1h.1c22.5 2 34.3 23.8 34.3 23.8 11.2 19.6 26.2 25.1 39.6 25.1a63 63 0 0025.6-6c2-14.8 7.8-24.9 14.2-30.7-49.7-5.8-102-25.5-102-113.5 0-25.1 8.7-45.6 23-61.6-2.3-5.8-10-29.2 2.2-60.8a18.64 18.64 0 015-.5c8.1 0 26.4 3.1 56.6 24.1a208.21 208.21 0 01112.2 0c30.2-21 48.5-24.1 56.6-24.1a18.64 18.64 0 015 .5c12.2 31.6 4.5 55 2.2 60.8 14.3 16.1 23 36.6 23 61.6 0 88.2-52.4 107.6-102.3 113.3 8 7.1 15.2 21.1 15.2 42.5 0 30.7-.3 55.5-.3 63 0 5.4 3.1 11.5 11.4 11.5a19.35 19.35 0 004-.4C415.9 449.2 480 363.1 480 261.7 480 134.9 379.7 32 256 32z\"\n    ></path>\n  </svg>\n);\n\nexport const PaperIcon = () => (\n  <svg viewBox=\"0 0 512 512\" width=\"16\" height=\"16\">\n    <path d=\"M428 224H288a48 48 0 01-48-48V36a4 4 0 00-4-4h-92a64 64 0 00-64 64v320a64 64 0 0064 64h224a64 64 0 0064-64V228a4 4 0 00-4-4z\"></path>\n    <path d=\"M419.22 188.59L275.41 44.78a2 2 0 00-3.41 1.41V176a16 16 0 0016 16h129.81a2 2 0 001.41-3.41z\"></path>\n  </svg>\n);\n\nexport const CheckIcon = () => (\n  <svg viewBox=\"0 0 512 512\" width=\"16\" height=\"16\">\n    <path d=\"M416 128L192 384l-96-96\"></path>\n  </svg>\n);\n\nexport const CrossIcon = () => (\n  <svg viewBox=\"0 0 512 512\" width=\"16\" height=\"16\">\n    <path d=\"M289.94 256l95-95A24 24 0 00351 127l-95 95-95-95a24 24 0 00-34 34l95 95-95 95a24 24 0 1034 34l95-95 95 95a24 24 0 0034-34z\"></path>\n  </svg>\n);\n","import React from 'react';\nimport data from '../data/tasks.json';\nimport { CodeIcon } from '../assets/icons';\nimport { PaperIcon } from '../assets/icons';\nimport UrlBuilder from './UrlBuilder';\n\nclass TaskDetails extends React.Component {\n  constructor(props) {\n    super(props);\n    this.taskId = props.match.params.id;\n    this.task = data.tasks.find((t) => t.id === this.taskId);\n    this.urlBuilder = new UrlBuilder();\n  }\n\n  renderModelRow(dataset) {\n    const { dataset_name, dataset_id, model_name, paper_title, paper_link, source_link } = dataset;\n    return (\n      <tr key={model_name}>\n        <td>{dataset_name}</td>\n        <td>{model_name}</td>\n        <td>{paper_title}</td>\n        <td>\n          {paper_link && (\n            <a href={paper_link} target=\"_blank\" rel=\"noopener noreferrer\">\n              <PaperIcon />\n            </a>\n          )}\n        </td>\n        <td>\n          {source_link && (\n            <a href={source_link} target=\"_blank\" rel=\"noopener noreferrer\">\n              <CodeIcon />\n            </a>\n          )}\n        </td>\n        <td>\n          <a href={this.urlBuilder.buildDatasetUrl({ id: dataset_id })}>See all models</a>\n        </td>\n      </tr>\n    );\n  }\n\n  renderTaskDatasets(datasets) {\n    if (!datasets || datasets.length === 0) {\n      return <p>There are no submissions for this task.</p>;\n    }\n\n    return (\n      <table className=\"table\">\n        <thead>\n          <tr>\n            <td>Dataset</td>\n            <td>Best model</td>\n            <td>Paper title</td>\n            <td>Paper</td>\n            <td>Code</td>\n            <td>&nbsp;</td>\n          </tr>\n        </thead>\n        <tbody>{datasets.map((ds) => this.renderModelRow(ds))}</tbody>\n      </table>\n    );\n  }\n\n  render() {\n    const { datasets } = this.task;\n    return (\n      <div className=\"task-details\">\n        <h3>{this.task.task_name}</h3>\n        <p className=\"task-description\">{this.task.task_description}</p>\n        {this.renderTaskDatasets(datasets)}\n      </div>\n    );\n  }\n}\n\nexport default TaskDetails;\n","import React, { Component } from 'react';\nimport { select, scaleLinear, scalePoint, extent, axisLeft, axisBottom } from 'd3';\n\nclass ScatterPlot extends Component {\n  constructor(props) {\n    super(props);\n    this.svgRef = React.createRef();\n  }\n\n  componentDidMount() {\n    const { timeRange, dataPoints, width, height } = this.props;\n    this.drawScatterPlot(timeRange, dataPoints, width, height);\n  }\n\n  componentDidUpdate() {\n    const { timeRange, dataPoints, width, height } = this.props;\n    this.drawScatterPlot(timeRange, dataPoints, width, height);\n  }\n  drawScatterPlot(xScaleDomain, dataPoints, width, height) {\n    const circleRadius = 5;\n\n    const svg = select(this.svgRef.current).attr('width', width).attr('height', height);\n    svg.selectAll('*').remove();\n\n    const title = 'Task leaderboard';\n\n    const xValue = (d) => d.submissionDate;\n    const xAxisLabel = 'Submission date';\n    const yValue = (d) => d.score;\n    const yAxisLabel = 'Score';\n\n    const margin = { top: 60, right: 40, bottom: 88, left: 150 };\n    const innerWidth = width - margin.left - margin.right;\n    const innerHeight = height - margin.top - margin.bottom;\n\n    const xScale = scalePoint().domain(xScaleDomain).range([0, innerWidth]);\n\n    const yScale = scaleLinear().domain(extent(dataPoints, yValue)).range([innerHeight, 0]).nice();\n\n    const g = svg.append('g').attr('transform', `translate(${margin.left},${margin.top})`);\n\n    const xAxis = axisBottom(xScale).tickSize(-innerHeight).tickPadding(15);\n\n    const yAxis = axisLeft(yScale).tickSize(-innerWidth).tickPadding(10);\n\n    const yAxisG = g.append('g').call(yAxis);\n    yAxisG.selectAll('.domain').remove();\n\n    yAxisG\n      .append('text')\n      .attr('class', 'axis-label')\n      .attr('y', -93)\n      .attr('x', -innerHeight / 2)\n      .attr('fill', 'black')\n      .attr('transform', `rotate(-90)`)\n      .attr('text-anchor', 'middle')\n      .text(yAxisLabel);\n\n    const xAxisG = g.append('g').call(xAxis).attr('transform', `translate(0,${innerHeight})`);\n\n    xAxisG.select('.domain').remove();\n\n    xAxisG\n      .append('text')\n      .attr('class', 'axis-label')\n      .attr('y', 75)\n      .attr('x', innerWidth / 2)\n      .attr('fill', 'black')\n      .text(xAxisLabel);\n\n    const tooltip = select('.canvas')\n      .append('div')\n      .style('opacity', 0)\n      .attr('class', 'tooltip')\n      .style('background-color', 'white')\n      .style('border', 'solid')\n      .style('border-width', '1px')\n      .style('border-radius', '5px')\n      .style('padding', '10px');\n\n    const mouseOver = (evt, data) => {\n      return tooltip.style('opacity', 1).html(`<b>${data.model}</b>: ${yValue(data)}`);\n    };\n\n    const mouseMove = (evt) => {\n      return tooltip.style('left', evt.clientX + 10 + 'px').style('top', evt.clientY + 'px');\n    };\n\n    const mouseLeave = (d) => tooltip.transition().duration(200).style('opacity', 0);\n\n    g.selectAll('circle')\n      .data(dataPoints)\n      .enter()\n      .append('circle')\n      .attr('cy', (d) => yScale(yValue(d)))\n      .attr('cx', (d) => xScale(xValue(d)))\n      .attr('r', circleRadius)\n      .on('mouseover', mouseOver)\n      .on('mousemove', mouseMove)\n      .on('mouseleave', mouseLeave);\n\n    g.append('text')\n      .attr('class', 'title')\n      .attr('x', innerWidth / 2)\n      .attr('y', -10)\n      .attr('text-anchor', 'middle')\n      .text(title);\n  }\n  render() {\n    return (\n      <>\n        <svg ref={this.svgRef}></svg>\n      </>\n    );\n  }\n}\nexport default ScatterPlot;\n","import React, { Component } from \"react\";\n\nimport ScatterPlot from \"./ScatterPlot\";\n\nclass PlotBuilder extends Component {\n  constructor(props) {\n    super(props);\n    this.dataset = props.dataset;\n    this.handleSelectedMetricChange = this.handleSelectedMetricChange.bind(\n      this\n    );\n    this.canvas = React.createRef();\n    this.onWindowResize = this.onWindowResize.bind(this);\n    this.state = {\n      timeRange: this.dataset.time_range,\n      dataPoints: this.buildDataPoints(this.dataset.preferred_metric),\n      width: undefined,\n      height: undefined,\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.onWindowResize);\n    this.onWindowResize();\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.onWindowResize);\n  }\n\n  buildDataPoints(metric) {\n    return this.dataset.data_points.map((p) => {\n      return {\n        model: p.model,\n        submissionDate: p.submission_date,\n        score: p[metric],\n      };\n    });\n  }\n  onWindowResize() {\n    const canvas = this.canvas.current;\n    const bounds = canvas.getBoundingClientRect();\n    this.setState({ width: bounds.width, height: bounds.height });\n  }\n  handleSelectedMetricChange(e) {\n    console.log(`Setting display metric to ${e.target.value}`);\n    const metric = e.target.value;\n    if (!metric) return;\n    this.setState({\n      dataPoints: this.buildDataPoints(metric),\n    });\n  }\n\n  render() {\n    return (\n      <>\n        <div ref={this.canvas} className=\"canvas\">\n          <ScatterPlot\n            timeRange={this.state.timeRange}\n            dataPoints={this.state.dataPoints}\n            width={this.state.width}\n            height={this.state.height}\n          />\n        </div>\n        <div className=\"input-group\">\n          <div className=\"input-group-prepend\">\n            <label className=\"input-group-text\" htmlFor=\"metrics\">\n              View scores for:\n            </label>\n          </div>\n          <select\n            className=\"custom-select\"\n            name=\"metrics\"\n            defaultValue={this.dataset.preferred_metric}\n            onChange={this.handleSelectedMetricChange}\n          >\n            {this.dataset.metrics.map((m) => (\n              <option key={m} value={m}>\n                {m}\n              </option>\n            ))}\n          </select>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default PlotBuilder;\n","import React from \"react\";\nimport data from \"../data/datasets.json\";\nimport \"./DatasetDetails.scss\";\nimport { CodeIcon } from \"../assets/icons\";\nimport { CheckIcon } from \"../assets/icons\";\nimport { CrossIcon } from \"../assets/icons\";\nimport UrlBuilder from \"./UrlBuilder\";\nimport PlotBuilder from \"./PlotBuilder\";\nimport ReactHtmlParser from \"react-html-parser\";\n\nclass DatasetDetails extends React.Component {\n  constructor(props) {\n    super(props);\n    this.datasetId = props.match.params.id;\n    this.dataset = data.datasets.find((ds) => ds.id === this.datasetId);\n    this.urlBuilder = new UrlBuilder();\n  }\n\n  renderModel(model) {\n    return (\n      <tr>\n        <td>{model.model}</td>\n        {this.dataset.metrics.map((m) => {\n          return <td>{model.results[m]}</td>;\n        })}\n        <td className=\"td-extra-training-data\">\n          {model.extra_training_data ? <CheckIcon /> : <CrossIcon />}\n        </td>\n        <td>\n          <a href={model.paper_link} target=\"_blank\" rel=\"noopener noreferrer\">\n            {model.paper_title}\n          </a>\n        </td>\n        <td>\n          {model.source_link && (\n            <a\n              href={model.source_link}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <CodeIcon />\n            </a>\n          )}\n        </td>\n        <td>{model.submission_date}</td>\n      </tr>\n    );\n  }\n\n  renderModels() {\n    return (\n      <table className=\"table dataset-details\">\n        <thead>\n          <tr>\n            <td>Model</td>\n            {this.dataset.metrics.map((m) => (\n              <td>{m}</td>\n            ))}\n            <td>Extra training data</td>\n            <td>Paper</td>\n            <td>Code</td>\n            <td>Submitted</td>\n          </tr>\n        </thead>\n        <tbody>{this.dataset.models.map((m) => this.renderModel(m))}</tbody>\n      </table>\n    );\n  }\n\n  render() {\n    return (\n      <>\n        <h3>{this.dataset.dataset_name}</h3>\n        <div className=\"dataset-description\">\n          {ReactHtmlParser(this.dataset.dataset_description)}\n        </div>\n        <table>\n          <tbody>\n            <tr>\n              <th>Source</th>\n              <td>\n                <a\n                  href={this.dataset.dataset_link}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  {this.dataset.dataset_link}\n                </a>\n              </td>\n            </tr>\n            <tr>\n              <th>Licence</th>\n              <td>MIT</td>\n            </tr>\n          </tbody>\n        </table>\n        <PlotBuilder dataset={this.dataset} />\n        {this.renderModels()}\n      </>\n    );\n  }\n}\n\nexport default DatasetDetails;\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Homepage from './Homepage';\nimport UrlBuilder from './UrlBuilder';\nimport TaskDetails from './TaskDetails';\nimport DatasetDetails from './DatasetDetails';\n\nconst Dashboard = (props) => {\n  const { location } = props;\n  return (\n    <Switch location={location}>\n      <Route exact path={UrlBuilder.taskUrlTemplate} component={TaskDetails} />\n      <Route exact path={UrlBuilder.datasetUrlTemplate} component={DatasetDetails} />\n      <Route path=\"/\" component={Homepage} />\n    </Switch>\n  );\n};\n\nexport default Dashboard;\n","import React from 'react';\nimport { CodeIcon } from '../assets/icons';\nimport '../assets/menu.scss';\n\nconst Menu = () => (\n  <div className=\"header-menu\">\n    <ul>\n      <li>\n        <a href=\"https://github.com/eemlcommunity/ro_benchmark_leaderboard\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <CodeIcon />\n          <span>Code</span>\n        </a>\n      </li>\n    </ul>\n  </div>\n);\n\nexport default Menu;\n","import React from 'react';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Menu from './Menu';\nimport { LogoIcon } from '../assets/icons';\n\nconst Header = () => (\n  <Navbar bg=\"dark\" variant=\"dark\">\n    <div className=\"logo-wrapper\">\n      <Navbar.Brand href=\"/ro_benchmark_leaderboard\">\n        <LogoIcon />\n        {/* <img\n        alt=\"\"\n        src={logo}\n        width=\"30\"\n        height=\"30\"\n        className=\"d-inline-block align-top\"\n      />{' '} */}\n        RoLa benchmark\n      </Navbar.Brand>\n    </div>\n    <div className=\"main-menu\">\n      <Menu />\n    </div>\n  </Navbar>\n);\n\nexport default Header;\n","import React from 'react';\nimport Dashboard from './Components/Dashboard';\nimport Header from './Components/Header';\nimport './assets/root.scss';\n\nconst App = (props) => {\n  const { location } = props;\n  return (\n    <div>\n      <Header />\n      <div className=\"container main-content\">\n        <Dashboard location={location} />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport App from './App';\n\nReactDOM.render(\n  <BrowserRouter basename=\"/ro_benchmark_leaderboard\">\n    <Route path=\"/\" component={App} />\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}