(this.webpackJsonpro_benchmark_leaderboard=this.webpackJsonpro_benchmark_leaderboard||[]).push([[0],{146:function(e,t,a){e.exports=a(207)},152:function(e,t,a){},153:function(e,t,a){},154:function(e,t,a){},180:function(e,t){},202:function(e,t,a){},206:function(e,t,a){},207:function(e,t,a){"use strict";a.r(t);var n=a(0),r=a.n(n),i=a(21),s=a.n(i),o=a(40),l=a(3),c=a(8),d=a(9),m=a(12),u=a(11),p=a(69),h=a(70),g=(a(152),function(){function e(){Object(c.a)(this,e)}return Object(d.a)(e,[{key:"normalizeUrl",value:function(e){return e.toLowerCase()}},{key:"buildTaskUrl",value:function(t){var a=t.id,n=e.basePath+"/task/"+a;return this.normalizeUrl(n)}},{key:"buildDatasetUrl",value:function(t){var a=t.id,n=e.basePath+"/dataset/"+a;return this.normalizeUrl(n)}}],[{key:"basePath",get:function(){return"/ro_benchmark_leaderboard"}},{key:"taskUrlTemplate",get:function(){return"/task/:id"}},{key:"datasetUrlTemplate",get:function(){return"/dataset/:id"}},{key:"aboutPageUrl",get:function(){return e.basePath+"/about"}},{key:"termsPageUrl",get:function(){return e.basePath+"/terms"}}]),e}()),b=function(e){Object(m.a)(a,e);var t=Object(u.a)(a);function a(e){var n;return Object(c.a)(this,a),(n=t.call(this,e)).urlBuilder=new g,n.state={activeArea:null},n}return Object(d.a)(a,[{key:"updateactiveArea",value:function(e){var t=this.state.activeArea;this.setState({activeArea:e!==t?e:null})}},{key:"renderDataset",value:function(e){return r.a.createElement("tr",{key:e.dataset},r.a.createElement("td",null,e.dataset),r.a.createElement("td",null,e.submission_count))}},{key:"renderTaskSubmissions",value:function(e){if(!e.summary)return r.a.createElement("span",null,"No submissions");var t=e.summary;return r.a.createElement("table",null,r.a.createElement("tbody",null,r.a.createElement("tr",null,r.a.createElement("td",null,t.dataset_count),r.a.createElement("td",null,1===t.dataset_count?"dataset":"datasets")),r.a.createElement("tr",null,r.a.createElement("td",null,t.submission_count),r.a.createElement("td",null,1===t.submission_count?"submission":"submissions"))))}},{key:"renderAreaTask",value:function(e){return r.a.createElement("a",{href:this.urlBuilder.buildTaskUrl(e),className:"task-tile-link"},r.a.createElement("div",{className:"task-tile",key:e.name},r.a.createElement("h5",null,e.name),r.a.createElement("div",{className:"task-data"},this.renderTaskSubmissions(e))))}},{key:"renderArea",value:function(e){var t=this,a=this.state.activeArea,n=e.tasks,i=e.name,s=a===i;return r.a.createElement("div",{key:e.name,className:"tile-wrapper"},r.a.createElement("div",{onClick:function(){return t.updateactiveArea(i)},className:"collapse-trigger"},r.a.createElement("h4",null,e.name)),r.a.createElement(p.Collapse,{isOpened:s},r.a.createElement("div",{className:"task-wrapper"},n.map((function(e){return t.renderAreaTask(e)})),r.a.createElement("div",{className:"clear"}))))}},{key:"render",value:function(){var e=this,t=h.areas;if(!this.state.activeArea){var a=t[0];this.state.activeArea=a.name}return t.map((function(t){return e.renderArea(t)}))}}]),a}(r.a.Component),f=a(71),k=function(){return r.a.createElement("svg",{viewBox:"0 0 16 16",width:"16",height:"16"},r.a.createElement("path",{fillRule:"evenodd",d:"M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0016 8c0-4.42-3.58-8-8-8z"}))},_=function(){return r.a.createElement("svg",{viewBox:"0 0 512 512",width:"16",height:"16"},r.a.createElement("path",{fillRule:"evenodd",d:"M256 32C132.3 32 32 134.9 32 261.7c0 101.5 64.2 187.5 153.2 217.9a17.56 17.56 0 003.8.4c8.3 0 11.5-6.1 11.5-11.4 0-5.5-.2-19.9-.3-39.1a102.4 102.4 0 01-22.6 2.7c-43.1 0-52.9-33.5-52.9-33.5-10.2-26.5-24.9-33.6-24.9-33.6-19.5-13.7-.1-14.1 1.4-14.1h.1c22.5 2 34.3 23.8 34.3 23.8 11.2 19.6 26.2 25.1 39.6 25.1a63 63 0 0025.6-6c2-14.8 7.8-24.9 14.2-30.7-49.7-5.8-102-25.5-102-113.5 0-25.1 8.7-45.6 23-61.6-2.3-5.8-10-29.2 2.2-60.8a18.64 18.64 0 015-.5c8.1 0 26.4 3.1 56.6 24.1a208.21 208.21 0 01112.2 0c30.2-21 48.5-24.1 56.6-24.1a18.64 18.64 0 015 .5c12.2 31.6 4.5 55 2.2 60.8 14.3 16.1 23 36.6 23 61.6 0 88.2-52.4 107.6-102.3 113.3 8 7.1 15.2 21.1 15.2 42.5 0 30.7-.3 55.5-.3 63 0 5.4 3.1 11.5 11.4 11.5a19.35 19.35 0 004-.4C415.9 449.2 480 363.1 480 261.7 480 134.9 379.7 32 256 32z"}))},v=function(){return r.a.createElement("svg",{viewBox:"0 0 512 512",width:"16",height:"16"},r.a.createElement("path",{d:"M428 224H288a48 48 0 01-48-48V36a4 4 0 00-4-4h-92a64 64 0 00-64 64v320a64 64 0 0064 64h224a64 64 0 0064-64V228a4 4 0 00-4-4z"}),r.a.createElement("path",{d:"M419.22 188.59L275.41 44.78a2 2 0 00-3.41 1.41V176a16 16 0 0016 16h129.81a2 2 0 001.41-3.41z"}))},w=function(){return r.a.createElement("svg",{viewBox:"0 0 512 512",width:"16",height:"16"},r.a.createElement("path",{d:"M416 128L192 384l-96-96"}))},E=function(){return r.a.createElement("svg",{viewBox:"0 0 512 512",width:"16",height:"16"},r.a.createElement("path",{d:"M289.94 256l95-95A24 24 0 00351 127l-95 95-95-95a24 24 0 00-34 34l95 95-95 95a24 24 0 1034 34l95-95 95 95a24 24 0 0034-34z"}))},y=(a(153),function(e){Object(m.a)(a,e);var t=Object(u.a)(a);function a(e){var n;return Object(c.a)(this,a),(n=t.call(this,e)).taskId=e.match.params.id,n.task=f.tasks.find((function(e){return e.id===n.taskId})),n.urlBuilder=new g,n}return Object(d.a)(a,[{key:"renderModelRow",value:function(e){var t=e.dataset_name,a=e.dataset_id,n=e.model_name,i=e.paper_title,s=e.paper_link,o=e.source_link;return r.a.createElement("tr",{key:n},r.a.createElement("td",null,t),r.a.createElement("td",null,n),r.a.createElement("td",null,i),r.a.createElement("td",null,s&&r.a.createElement("a",{href:s,target:"_blank",rel:"noopener noreferrer"},r.a.createElement(v,null))),r.a.createElement("td",null,o&&r.a.createElement("a",{href:o,target:"_blank",rel:"noopener noreferrer"},r.a.createElement(_,null))),r.a.createElement("td",null,r.a.createElement("a",{href:this.urlBuilder.buildDatasetUrl({id:a})},"See all models")))}},{key:"renderTaskDatasets",value:function(e){var t=this;return e&&0!==e.length?r.a.createElement("table",{className:"table"},r.a.createElement("thead",null,r.a.createElement("tr",null,r.a.createElement("td",null,"Dataset"),r.a.createElement("td",null,"Best model"),r.a.createElement("td",null,"Paper title"),r.a.createElement("td",null,"Paper"),r.a.createElement("td",null,"Code"),r.a.createElement("td",null,"\xa0"))),r.a.createElement("tbody",null,e.map((function(e){return t.renderModelRow(e)})))):r.a.createElement("p",null,"There are no submissions for this task.")}},{key:"render",value:function(){var e=this.task.datasets;return r.a.createElement("div",{className:"task-details"},r.a.createElement("h3",null,this.task.task_name),r.a.createElement("p",{className:"task-description"},this.task.task_description),r.a.createElement("h4",null," Benchmarks"),this.renderTaskDatasets(e))}}]),a}(r.a.Component)),N=a(72),P=(a(154),a(26)),L=a(16),R=function(e){Object(m.a)(a,e);var t=Object(u.a)(a);function a(e){var n;return Object(c.a)(this,a),(n=t.call(this,e)).svgRef=r.a.createRef(),n}return Object(d.a)(a,[{key:"componentDidMount",value:function(){var e=this.props,t=e.timeRange,a=e.dataPoints,n=e.width,r=e.height;this.drawScatterPlot(t,a,n,r)}},{key:"componentDidUpdate",value:function(){var e=this.props,t=e.timeRange,a=e.dataPoints,n=e.width,r=e.height;this.drawScatterPlot(t,a,n,r)}},{key:"drawScatterPlot",value:function(e,t,a,n){var r=Object(L.f)(this.svgRef.current).attr("width",a).attr("height",n);r.selectAll("*").remove();var i=function(e){return e.score},s=60,o=150,l=a-o-40,c=n-s-88,d=Object(L.e)().domain(e).range([0,l]),m=Object(L.d)().domain(Object(L.c)(t,i)).range([c,0]).nice(),u=r.append("g").attr("transform","translate(".concat(o,",").concat(s,")")),p=Object(L.a)(d).tickSize(-c).tickPadding(15),h=Object(L.b)(m).tickSize(-l).tickPadding(10),g=u.append("g").call(h);g.selectAll(".domain").remove(),g.append("text").attr("class","axis-label").attr("y",-93).attr("x",-c/2).attr("fill","black").attr("transform","rotate(-90)").attr("text-anchor","middle").text("Score");var b=u.append("g").call(p).attr("transform","translate(0,".concat(c,")"));b.select(".domain").remove(),b.append("text").attr("class","axis-label").attr("y",75).attr("x",l/2).attr("fill","black").text("Submission date");var f=Object(L.f)(".canvas").append("div").style("opacity",0).attr("class","tooltip").style("background-color","white").style("border","solid").style("border-width","1px").style("border-radius","5px").style("padding","10px");u.selectAll("circle").data(t).enter().append("circle").attr("cy",(function(e){return m(i(e))})).attr("cx",(function(e){return d(function(e){return e.submissionDate}(e))})).attr("r",5).on("mouseover",(function(e,t){return f.style("opacity",1).html("<b>".concat(t.model,"</b>: ").concat(i(t)))})).on("mousemove",(function(e){return f.style("left",e.clientX+10+"px").style("top",e.clientY+"px")})).on("mouseleave",(function(e){return f.transition().duration(200).style("opacity",0)})),u.append("text").attr("class","title").attr("x",l/2).attr("y",-10).attr("text-anchor","middle").text("Task leaderboard")}},{key:"render",value:function(){return r.a.createElement(r.a.Fragment,null,r.a.createElement("svg",{ref:this.svgRef}))}}]),a}(n.Component),C=function(e){Object(m.a)(a,e);var t=Object(u.a)(a);function a(e){var n;return Object(c.a)(this,a),(n=t.call(this,e)).dataset=e.dataset,n.handleSelectedMetricChange=n.handleSelectedMetricChange.bind(Object(P.a)(n)),n.canvas=r.a.createRef(),n.onWindowResize=n.onWindowResize.bind(Object(P.a)(n)),n.state={timeRange:n.dataset.time_range,dataPoints:n.buildDataPoints(n.dataset.preferred_metric),width:void 0,height:void 0},n}return Object(d.a)(a,[{key:"componentDidMount",value:function(){window.addEventListener("resize",this.onWindowResize),this.onWindowResize()}},{key:"componentWillUnmount",value:function(){window.removeEventListener("resize",this.onWindowResize)}},{key:"buildDataPoints",value:function(e){return this.dataset.data_points.map((function(t){return{model:t.model,submissionDate:t.submission_date,score:t[e]}}))}},{key:"onWindowResize",value:function(){var e=this.canvas.current.getBoundingClientRect();this.setState({width:e.width,height:e.height})}},{key:"handleSelectedMetricChange",value:function(e){console.log("Setting display metric to ".concat(e.target.value));var t=e.target.value;t&&this.setState({dataPoints:this.buildDataPoints(t)})}},{key:"render",value:function(){return r.a.createElement(r.a.Fragment,null,r.a.createElement("div",{ref:this.canvas,className:"canvas"},r.a.createElement(R,{timeRange:this.state.timeRange,dataPoints:this.state.dataPoints,width:this.state.width,height:this.state.height})),r.a.createElement("div",{className:"input-group"},r.a.createElement("div",{className:"input-group-prepend"},r.a.createElement("label",{className:"input-group-text",htmlFor:"metrics"},"View scores for:")),r.a.createElement("select",{className:"custom-select",name:"metrics",defaultValue:this.dataset.preferred_metric,onChange:this.handleSelectedMetricChange},this.dataset.metrics.map((function(e){return r.a.createElement("option",{key:e,value:e},e)})))))}}]),a}(n.Component),T=a(73),x=a.n(T),U=function(e){Object(m.a)(a,e);var t=Object(u.a)(a);function a(e){var n;return Object(c.a)(this,a),(n=t.call(this,e)).datasetId=e.match.params.id,n.dataset=N.datasets.find((function(e){return e.id===n.datasetId})),n.urlBuilder=new g,n}return Object(d.a)(a,[{key:"renderModel",value:function(e){return r.a.createElement("tr",null,r.a.createElement("td",null,e.model),this.dataset.metrics.map((function(t){return r.a.createElement("td",null,e.results[t])})),r.a.createElement("td",{className:"td-extra-training-data"},e.extra_training_data?r.a.createElement(w,null):r.a.createElement(E,null)),r.a.createElement("td",null,r.a.createElement("a",{href:e.paper_link,target:"_blank",rel:"noopener noreferrer"},e.paper_title)),r.a.createElement("td",null,e.source_link&&r.a.createElement("a",{href:e.source_link,target:"_blank",rel:"noopener noreferrer"},r.a.createElement(_,null))),r.a.createElement("td",null,e.submission_date))}},{key:"renderModels",value:function(){var e=this;return r.a.createElement("table",{className:"table dataset-details"},r.a.createElement("thead",null,r.a.createElement("tr",null,r.a.createElement("td",null,"Model"),this.dataset.metrics.map((function(e){return r.a.createElement("td",null,e)})),r.a.createElement("td",null,"Extra training data"),r.a.createElement("td",null,"Paper"),r.a.createElement("td",null,"Code"),r.a.createElement("td",null,"Submitted"))),r.a.createElement("tbody",null,this.dataset.models.map((function(t){return e.renderModel(t)}))))}},{key:"render",value:function(){return r.a.createElement(r.a.Fragment,null,r.a.createElement("h3",null,this.dataset.dataset_name),r.a.createElement("div",{className:"dataset-description"},x()(this.dataset.dataset_description)),r.a.createElement("table",{className:"dataset-info"},r.a.createElement("tbody",null,r.a.createElement("tr",null,r.a.createElement("th",null,"Source"),r.a.createElement("td",null,r.a.createElement("a",{href:this.dataset.dataset_link,target:"_blank",rel:"noopener noreferrer"},this.dataset.dataset_link))),r.a.createElement("tr",null,r.a.createElement("th",null,"License"),r.a.createElement("td",null,this.dataset.license_url?r.a.createElement("a",{href:this.dataset.license_url,target:"_blank",rel:"noopener noreferrer"},this.dataset.license):this.dataset.license)))),r.a.createElement(C,{dataset:this.dataset}),this.renderModels())}}]),a}(r.a.Component),S=function(e){return r.a.createElement("h1",null,"About us and this project")},z=function(){return r.a.createElement("h1",null,"Terms and Conditions")},O=function(e){var t=e.location;return r.a.createElement(l.c,{location:t},r.a.createElement(l.a,{exact:!0,path:"/about",component:S}),r.a.createElement(l.a,{exact:!0,path:g.taskUrlTemplate,component:y}),r.a.createElement(l.a,{exact:!0,path:g.datasetUrlTemplate,component:U}),r.a.createElement(l.a,{exact:!0,path:"/terms",component:z}),r.a.createElement(l.a,{path:"/",component:b}))},A=a(44),F=a(27),D=(a(202),function(){return r.a.createElement(A.a,{bg:"light"},r.a.createElement("div",{className:"logo-wrapper"},r.a.createElement(A.a.Brand,{href:"/ro_benchmark_leaderboard"},r.a.createElement(k,null),"RoLa benchmark")),r.a.createElement(F.a,{className:"justify-content-end"},r.a.createElement(F.a.Link,{href:g.aboutPageUrl},"About"),r.a.createElement(F.a.Link,{href:g.termsPageUrl},"Terms"),r.a.createElement(F.a.Link,{href:"https://github.com/eemlcommunity/ro_benchmark_leaderboard",target:"_blank",rel:"noopener noreferrer"},r.a.createElement(_,null),r.a.createElement("span",null,"Code"))))}),j=(a(206),function(e){var t=e.location;return r.a.createElement("div",null,r.a.createElement(D,null),r.a.createElement("div",{className:"main-content"},r.a.createElement(O,{location:t})))});s.a.render(r.a.createElement(o.a,{basename:"/ro_benchmark_leaderboard"},r.a.createElement(l.a,{path:"/",component:j})),document.getElementById("root"))},70:function(e){e.exports=JSON.parse('{"areas":[{"name":"NLP","tasks":[{"id":"text-classification","name":"Text Classification","summary":{"dataset_count":0,"submission_count":0}},{"id":"ner","name":"NER","summary":{"dataset_count":1,"submission_count":0}},{"id":"machine-translation","name":"Machine Translation","summary":{"dataset_count":0,"submission_count":0}},{"id":"tokenization","name":"Tokenization","summary":{"dataset_count":1,"submission_count":2}},{"id":"sentence-segmentation","name":"Sentence Segmentation","summary":{"dataset_count":1,"submission_count":2}},{"id":"lemmatization","name":"Lemmatization","summary":{"dataset_count":1,"submission_count":2}},{"id":"pos-tagging","name":"POS Tagging","summary":{"dataset_count":1,"submission_count":3}},{"id":"dependency-parsing","name":"Dependency Parsing","summary":{"dataset_count":1,"submission_count":2}},{"id":"language-modeling","name":"Language Modeling","summary":{"dataset_count":0,"submission_count":0}}]}]}')},71:function(e){e.exports=JSON.parse('{"tasks":[{"area":"NLP","id":"text-classification","task_name":"Text Classification","task_description":"Text classification is the task of assigning a sentence or document an appropriate category. The categories depend on the chosen dataset and can range from topics.","datasets":[]},{"area":"NLP","id":"ner","task_name":"NER","task_description":"Named entity recognition (NER) is the task of tagging entities in text with their corresponding type. Approaches typically use BIO notation, which differentiates the beginning (B) and the inside (I) of entities. O is used for non-entity tokens.","datasets":[]},{"area":"NLP","id":"machine-translation","task_name":"Machine Translation","task_description":"Machine translation is the task of translating a sentence in a source language to a different target language","datasets":[]},{"area":"NLP","id":"tokenization","task_name":"Tokenization","task_description":"Tokenization is the process of breaking a stream of text up into words, phrases, symbols, or other meaningful elements called tokens. The list of tokens becomes input for further processing such as parsing or text mining.","datasets":[{"dataset_id":"ud-romanian-rrt-treebank-tokenization","dataset_name":"UD Romanian RRT Treebank - Tokenization","metric":"F1","model_name":"NLP-Cube v1.1 [end-to-end]","paper_title":"NLP-Cube: End-to-End Raw Text Processing With Neural Networks","paper_link":"http://www.aclweb.org/anthology/K18-2017","source_link":"https://github.com/adobe/NLP-Cube"}]},{"area":"NLP","id":"sentence-segmentation","task_name":"Sentence Segmentation","task_description":"Sentence segmentation is the task of splitting a sentence into its component phrases.","datasets":[{"dataset_id":"ud-romanian-rrt-treebank-sentence-segmentation","dataset_name":"UD Romanian RRT Treebank - Sentence Segmentation","metric":"F1","model_name":"NLP-Cube v1.1 [end-to-end]","paper_title":"NLP-Cube: End-to-End Raw Text Processing With Neural Networks","paper_link":"http://www.aclweb.org/anthology/K18-2017","source_link":"https://github.com/adobe/NLP-Cube"}]},{"area":"NLP","id":"lemmatization","task_name":"Lemmatization","task_description":"Lemmatization is the process of identifying the lemma of a given word or sequence of words.","datasets":[{"dataset_id":"ud-romanian-rrt-treebank-lemmatization","dataset_name":"UD Romanian RRT Treebank - Lemmatization","metric":"F1","model_name":"NLP-Cube v1.1 [end-to-end]","paper_title":"NLP-Cube: End-to-End Raw Text Processing With Neural Networks","paper_link":"http://www.aclweb.org/anthology/K18-2017","source_link":"https://github.com/adobe/NLP-Cube"}]},{"area":"NLP","id":"pos-tagging","task_name":"POS Tagging","task_description":"Part-of-speech tagging (POS tagging) is the task of tagging a word in a text with its part of speech. A part of speech is a category of words with similar grammatical properties.","datasets":[{"dataset_id":"ud-romanian-rrt-treebank-part-of-speech-tagging","dataset_name":"UD Romanian RRT Treebank - Part of Speech Tagging","metric":"F1","model_name":"NLP-Cube v1.1 [end-to-end]","paper_title":"NLP-Cube: End-to-End Raw Text Processing With Neural Networks","paper_link":"http://www.aclweb.org/anthology/K18-2017","source_link":"https://github.com/adobe/NLP-Cube"}]},{"area":"NLP","id":"dependency-parsing","task_name":"Dependency Parsing","task_description":"Dependency parsing is the task of extracting a dependency parse of a sentence that represents its grammatical structure and defines the relationships between \\"head\\" words and words, which modify those heads.","datasets":[{"dataset_id":"ud-romanian-rrt-treebank-dependency-parsing","dataset_name":"UD Romanian RRT Treebank - Dependency Parsing","metric":"UAS","model_name":"NLP-Cube v1.1 [end-to-end]","paper_title":"NLP-Cube: End-to-End Raw Text Processing With Neural Networks","paper_link":"http://www.aclweb.org/anthology/K18-2017","source_link":"https://github.com/adobe/NLP-Cube"}]},{"area":"NLP","id":"language-modeling","task_name":"Language Modeling","task_description":"Language modeling is the task of predicting the next word or character in a document.","datasets":[]}]}')},72:function(e){e.exports=JSON.parse('{"datasets":[{"task":"NER","id":"ronec-romanian-named-entity-corpus-v1","dataset_name":"RONEC - Romanian Named Entity Corpus v1","dataset_description":"Version 1.0 of this free corpus holds 5127 sentences, annotated with 16 classes, with a total of 26376 annotated entities. The corpus comes into two formats: BRAT and CONLLUP, both are text formats for easy access.<br><br>\\nFor evaluation metrics please see <a href=\\"http://www.davidsbatista.net/blog/2018/05/09/Named_Entity_Evaluation/\\">http://www.davidsbatista.net/blog/2018/05/09/Named_Entity_Evaluation/</a>. Please report F1, Precision and Recall.\\n","dataset_link":"https://github.com/dumitrescustefan/ronec","preferred_metric":"F1","license":"MIT","license_url":"","models":[],"metrics":[],"time_range":["Sep \'20","Oct \'20"],"data_points":[]},{"task":"Tokenization","id":"ud-romanian-rrt-treebank-tokenization","dataset_name":"UD Romanian RRT Treebank - Tokenization","dataset_description":"Universal Dependencies (UD) is a framework for consistent annotation of grammar (parts of speech, morphological features, and syntactic dependencies) across different human languages. UD is an open community effort with over 300 contributors producing more than 150 treebanks in 90 languages.<br>\\nHere we are focusing on the Romanian <b>RRT Treebank</b> which contains a train, validation and test file with annotations including tokenization, sentence segmentation, part-of-speech, lemmatization and dependencies parsing. <br>\\nFor more details regarding the CoNLL-U format please see <a href=\\"https://universaldependencies.org/format.html\\">https://universaldependencies.org/format.html</a>.<br>\\nFor evaluation please generate a CoNLL-U format text file and evaluate it with the python script avaliable <a href=\\"http://universaldependencies.org/conll18/evaluation.html\\">here</a>.<br><br>\\n\\nPlease note that the UD Romanian RRT Treebank contains several subtasks in a single file. Here, we are interested only in <b>tokenization</b>. Your submitted system should start with the raw text file and output a CoNLL-U file. Please report only the <b>Word Segmentation</b> F1, Precision and Recall scores.","dataset_link":"https://universaldependencies.org/","preferred_metric":"F1","license":"CC BY-SA 4.0","license_url":"https://creativecommons.org/licenses/by-sa/4.0/","models":[{"model":"NLP-Cube v1.0 [end-to-end]","extra_training_data":true,"paper_title":"NLP-Cube: End-to-End Raw Text Processing With Neural Networks","paper_link":"http://www.aclweb.org/anthology/K18-2017","source_link":"https://github.com/adobe/NLP-Cube","submission_date":"2018-10","results":{"F1":99.74}},{"model":"NLP-Cube v1.1 [end-to-end]","extra_training_data":true,"paper_title":"NLP-Cube: End-to-End Raw Text Processing With Neural Networks","paper_link":"http://www.aclweb.org/anthology/K18-2017","source_link":"https://github.com/adobe/NLP-Cube","submission_date":"2019-04","results":{"F1":99.71}}],"metrics":["F1"],"time_range":["Sep \'18","Oct \'18","Apr \'19","May \'19"],"data_points":[{"model":"NLP-Cube v1.0 [end-to-end]","submission_date":"Oct \'18","F1":99.74},{"model":"NLP-Cube v1.1 [end-to-end]","submission_date":"Apr \'19","F1":99.71}]},{"task":"Sentence Segmentation","id":"ud-romanian-rrt-treebank-sentence-segmentation","dataset_name":"UD Romanian RRT Treebank - Sentence Segmentation","dataset_description":"Universal Dependencies (UD) is a framework for consistent annotation of grammar (parts of speech, morphological features, and syntactic dependencies) across different human languages. UD is an open community effort with over 300 contributors producing more than 150 treebanks in 90 languages.<br>\\nHere we are focusing on the Romanian <b>RRT Treebank</b> which contains a train, validation and test file with annotations including tokenization, sentence segmentation, part-of-speech, lemmatization and dependencies parsing. <br>\\nFor more details regarding the CoNLL-U format please see <a href=\\"https://universaldependencies.org/format.html\\">https://universaldependencies.org/format.html</a>.<br>\\nFor evaluation please generate a CoNLL-U format text file and evaluate it with the python script avaliable <a href=\\"http://universaldependencies.org/conll18/evaluation.html\\">here</a>.<br><br>\\n\\nPlease note that the UD Romanian RRT Treebank contains several subtasks in a single file. Here, we are interested only in <b>sentence segmentation</b>.  Your submitted system should start with the raw text file and output a CoNLL-U file. Please report only the <b>sentence segmentation</b> F1, Precision and Recall scores.","dataset_link":"https://universaldependencies.org/","preferred_metric":"F1","license":"CC BY-SA 4.1","license_url":"https://creativecommons.org/licenses/by-sa/4.0/","models":[{"model":"NLP-Cube v1.0 [end-to-end]","extra_training_data":true,"paper_title":"NLP-Cube: End-to-End Raw Text Processing With Neural Networks","paper_link":"http://www.aclweb.org/anthology/K18-2017","source_link":"https://github.com/adobe/NLP-Cube","submission_date":"2018-10","results":{"F1":95.56}},{"model":"NLP-Cube v1.1 [end-to-end]","extra_training_data":true,"paper_title":"NLP-Cube: End-to-End Raw Text Processing With Neural Networks","paper_link":"http://www.aclweb.org/anthology/K18-2017","source_link":"https://github.com/adobe/NLP-Cube","submission_date":"2019-04","results":{"F1":95.42}}],"metrics":["F1"],"time_range":["Sep \'18","Oct \'18","Apr \'19","May \'19"],"data_points":[{"model":"NLP-Cube v1.0 [end-to-end]","submission_date":"Oct \'18","F1":95.56},{"model":"NLP-Cube v1.1 [end-to-end]","submission_date":"Apr \'19","F1":95.42}]},{"task":"Lemmatization","id":"ud-romanian-rrt-treebank-lemmatization","dataset_name":"UD Romanian RRT Treebank - Lemmatization","dataset_description":"Universal Dependencies (UD) is a framework for consistent annotation of grammar (parts of speech, morphological features, and syntactic dependencies) across different human languages. UD is an open community effort with over 300 contributors producing more than 150 treebanks in 90 languages.<br>\\nHere we are focusing on the Romanian <b>RRT Treebank</b> which contains a train, validation and test file with annotations including tokenization, sentence segmentation, part-of-speech, lemmatization and dependencies parsing. <br>\\nFor more details regarding the CoNLL-U format please see <a href=\\"https://universaldependencies.org/format.html\\">https://universaldependencies.org/format.html</a>.<br>\\nFor evaluation please generate a CoNLL-U format text file and evaluate it with the python script avaliable <a href=\\"http://universaldependencies.org/conll18/evaluation.html\\">here</a>.<br><br>\\n\\nPlease note that the UD Romanian RRT Treebank contains several subtasks in a single file. Here, we are interested only in <b>lemmatization</b>. Your submitted system should start with the CoNLL-U test file to ensure gold word tokenization and sentence segmentation and output a CoNLL-U file, with the lemma column filled in. All other fields can be left empty (marked with the \'_\' underline). If your system performs end-to-end processing (i.e. starts from raw text, segments sentences, tokenizes, etc, up to the current task, please mark it as such by appending to its name <b>[end-to-end]</b>).\\n\\nPlease report only F1, Precision and Recall scores.","dataset_link":"https://universaldependencies.org/","preferred_metric":"F1","license":"CC BY-SA 4.2","license_url":"https://creativecommons.org/licenses/by-sa/4.0/","models":[{"model":"NLP-Cube v1.0 [end-to-end]","extra_training_data":true,"paper_title":"NLP-Cube: End-to-End Raw Text Processing With Neural Networks","paper_link":"http://www.aclweb.org/anthology/K18-2017","source_link":"https://github.com/adobe/NLP-Cube","submission_date":"2018-10","results":{"F1":96.91}},{"model":"NLP-Cube v1.1 [end-to-end]","extra_training_data":true,"paper_title":"NLP-Cube: End-to-End Raw Text Processing With Neural Networks","paper_link":"http://www.aclweb.org/anthology/K18-2017","source_link":"https://github.com/adobe/NLP-Cube","submission_date":"2019-04","results":{"F1":96.57}}],"metrics":["F1"],"time_range":["Sep \'18","Oct \'18","Apr \'19","May \'19"],"data_points":[{"model":"NLP-Cube v1.0 [end-to-end]","submission_date":"Oct \'18","F1":96.91},{"model":"NLP-Cube v1.1 [end-to-end]","submission_date":"Apr \'19","F1":96.57}]},{"task":"POS Tagging","id":"ud-romanian-rrt-treebank-part-of-speech-tagging","dataset_name":"UD Romanian RRT Treebank - Part of Speech Tagging","dataset_description":"Universal Dependencies (UD) is a framework for consistent annotation of grammar (parts of speech, morphological features, and syntactic dependencies) across different human languages. UD is an open community effort with over 300 contributors producing more than 150 treebanks in 90 languages.<br>\\nHere we are focusing on the Romanian <b>RRT Treebank</b> which contains a train, validation and test file with annotations including tokenization, sentence segmentation, part-of-speech, lemmatization and dependencies parsing. <br>\\nFor more details regarding the CoNLL-U format please see <a href=\\"https://universaldependencies.org/format.html\\">https://universaldependencies.org/format.html</a>.<br>\\nFor evaluation please generate a CoNLL-U format text file and evaluate it with the python script avaliable <a href=\\"http://universaldependencies.org/conll18/evaluation.html\\">here</a>.<br><br>\\n\\nPlease note that the UD Romanian RRT Treebank contains several subtasks in a single file. Here, we are interested only in <b>part-of-speech tagging</b>. Your submitted system should start with the CoNLL-U test file to ensure gold word tokenization and sentence segmentation and output a CoNLL-U file, with the UPOS column filled in. All other fields can be left empty (marked with the \'_\' underline). If your system performs end-to-end processing (i.e. starts from raw text, segments sentences, tokenizes, etc, up to the current task, please mark it as such by appending to its name <b>[end-to-end]</b>).\\n\\nPlease report only F1, Precision and Recall scores.","dataset_link":"https://universaldependencies.org/","preferred_metric":"F1","license":"CC BY-SA 4.3","license_url":"https://creativecommons.org/licenses/by-sa/4.0/","models":[{"model":"NLP-Cube v1.0 [end-to-end]","extra_training_data":true,"paper_title":"NLP-Cube: End-to-End Raw Text Processing With Neural Networks","paper_link":"http://www.aclweb.org/anthology/K18-2017","source_link":"https://github.com/adobe/NLP-Cube","submission_date":"2018-10","results":{"F1":97.42}},{"model":"NLP-Cube v1.1 [end-to-end]","extra_training_data":true,"paper_title":"NLP-Cube: End-to-End Raw Text Processing With Neural Networks","paper_link":"http://www.aclweb.org/anthology/K18-2017","source_link":"https://github.com/adobe/NLP-Cube","submission_date":"2019-04","results":{"F1":96.96}},{"model":"Romanian BERT Baseline (bert-base-romanian-uncased-v1)","extra_training_data":true,"paper_title":"","paper_link":"","source_link":"https://github.com/dumitrescustefan/Romanian-Transformers","submission_date":"2020-05","results":{"F1":98.18}}],"metrics":["F1"],"time_range":["Sep \'18","Oct \'18","Apr \'19","May \'20","Jun \'20"],"data_points":[{"model":"NLP-Cube v1.0 [end-to-end]","submission_date":"Oct \'18","F1":97.42},{"model":"NLP-Cube v1.1 [end-to-end]","submission_date":"Apr \'19","F1":96.96},{"model":"Romanian BERT Baseline (bert-base-romanian-uncased-v1)","submission_date":"May \'20","F1":98.18}]},{"task":"Dependency Parsing","id":"ud-romanian-rrt-treebank-dependency-parsing","dataset_name":"UD Romanian RRT Treebank - Dependency Parsing","dataset_description":"Universal Dependencies (UD) is a framework for consistent annotation of grammar (parts of speech, morphological features, and syntactic dependencies) across different human languages. UD is an open community effort with over 300 contributors producing more than 150 treebanks in 90 languages.<br>\\nHere we are focusing on the Romanian <b>RRT Treebank</b> which contains a train, validation and test file with annotations including tokenization, sentence segmentation, part-of-speech, lemmatization and dependencies parsing. <br>\\nFor more details regarding the CoNLL-U format please see <a href=\\"https://universaldependencies.org/format.html\\">https://universaldependencies.org/format.html</a>.<br>\\nFor evaluation please generate a CoNLL-U format text file and evaluate it with the python script avaliable <a href=\\"http://universaldependencies.org/conll18/evaluation.html\\">here</a>.<br><br>\\n\\nPlease note that the UD Romanian RRT Treebank contains several subtasks in a single file. Here, we are interested only in <b>dependency parsing</b>. Your submitted system should start with the CoNLL-U test file to ensure gold word tokenization and sentence segmentation and output a CoNLL-U file, with the appropriate columns filled in (head and deps). All other fields can be left empty (marked with the \'_\' underline). If your system performs end-to-end processing (i.e. starts from raw text, segments sentences, tokenizes, etc, up to the current task, please mark it as such by appending to its name <b>[end-to-end]</b>).\\n\\nPlease report only F1, Precision and Recall scores.","dataset_link":"https://universaldependencies.org/","preferred_metric":"UAS","license":"CC BY-SA 4.4","license_url":"https://creativecommons.org/licenses/by-sa/4.0/","models":[{"model":"NLP-Cube v1.0 [end-to-end]","extra_training_data":true,"paper_title":"NLP-Cube: End-to-End Raw Text Processing With Neural Networks","paper_link":"http://www.aclweb.org/anthology/K18-2017","source_link":"https://github.com/adobe/NLP-Cube","submission_date":"2018-10","results":{"UAS":90.38,"LAS":85.23}},{"model":"NLP-Cube v1.1 [end-to-end]","extra_training_data":true,"paper_title":"NLP-Cube: End-to-End Raw Text Processing With Neural Networks","paper_link":"http://www.aclweb.org/anthology/K18-2017","source_link":"https://github.com/adobe/NLP-Cube","submission_date":"2019-04","results":{"UAS":90.14,"LAS":85.06}}],"metrics":["UAS","LAS"],"time_range":["Sep \'18","Oct \'18","Apr \'19","May \'19"],"data_points":[{"model":"NLP-Cube v1.0 [end-to-end]","submission_date":"Oct \'18","UAS":90.38,"LAS":85.23},{"model":"NLP-Cube v1.1 [end-to-end]","submission_date":"Apr \'19","UAS":90.14,"LAS":85.06}]}]}')}},[[146,1,2]]]);
//# sourceMappingURL=main.adbaf8d6.chunk.js.map