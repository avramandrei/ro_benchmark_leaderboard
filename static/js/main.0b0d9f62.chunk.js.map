{"version":3,"sources":["Components/UrlBuilder.js","Components/Homepage.js","assets/icons.js","Components/TaskDetails.js","Components/ScatterPlot.js","Components/PlotBuilder.js","Components/ModelScoresTable.js","Components/DatasetDetails.js","Components/AboutPage.js","Components/TermsPage.js","Components/SubmitPage.js","Components/Dashboard.js","Components/Header.js","Components/AppBreadcrumbs.js","Components/Footer.js","App.js","index.js"],"names":["UrlBuilder","url","toLowerCase","this","normalizeUrl","replace","basePath","canonicalUrl","getCanonicalUrl","task","id","startsWith","dataset","Homepage","props","urlBuilder","state","activeArea","name","setState","submission_count","summary","dataset_count","href","buildTaskUrl","className","renderTaskSubmissions","area","tasks","isTileOpened","onClick","updateactiveArea","isOpened","map","currentTask","renderAreaTask","areas","data","defaultArea","renderArea","React","Component","LogoIcon","viewBox","width","height","fillRule","d","CodeIcon","fill","CheckIcon","CrossIcon","TaskDetails","taskId","match","params","find","t","paper_link","paper_title","target","rel","dataset_name","dataset_id","model_name","source_link","buildDatasetUrl","renderPaper","datasets","length","ds","renderModelRow","task_name","task_description","renderTaskDatasets","ScatterPlot","svgRef","createRef","timeRange","dataPoints","drawScatterPlot","xScaleDomain","svg","select","current","attr","selectAll","remove","yValue","score","margin","innerWidth","innerHeight","xScale","scalePoint","domain","range","yScale","scaleLinear","extent","nice","g","append","xAxis","axisBottom","tickSize","tickPadding","yAxis","axisLeft","yAxisG","call","text","xAxisG","tooltip","style","enter","submissionDate","xValue","on","evt","html","model","leftPos","clientX","topPos","clientY","transition","duration","ref","PlotBuilder","buildDataPoints","metric","data_points","p","submission_date","handleSelectedMetricChange","bind","canvas","onWindowResize","time_range","preferred_metric","undefined","window","addEventListener","removeEventListener","bounds","getBoundingClientRect","e","value","htmlFor","defaultValue","onChange","metrics","m","ModelScoresTable","models","sortDirection","sortBy","onSort","sortFunction","nextSortDirection","a","b","valA","results","valB","rank","extra_training_data","model_size","type","renderSortButton","sort","renderModel","DatasetDetails","datasetId","ReactHtmlParser","dataset_description","dataset_link","license_url","license","submitPageUrl","AboutPage","tasks_info","datasets_info","TermsPage","SubmitPage","Button","variant","Dashboard","location","exact","path","component","taskUrlTemplate","datasetUrlTemplate","Header","Navbar","collapseOnSelect","expand","Brand","Toggle","aria-controls","Collapse","Nav","Link","aboutPageUrl","termsPageUrl","AppBreadcrumbs","urlMap","isTaskUrl","getTaskId","taskData","isDatasetUrl","getDatasetId","datasetData","trim","isHome","isHomeUrl","isTask","isDataset","pathname","Breadcrumb","Item","active","getTaskName","getTaskUrl","getDatasetName","isOtherUrl","Footer","render","App","WebFont","load","google","families","ReactDOM","basename","document","getElementById"],"mappings":"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","file":"static/js/main.0b0d9f62.chunk.js","sourcesContent":["class UrlBuilder {\n  static get basePath() {\n    return '/ro_benchmark_leaderboard';\n  }\n\n  static get taskUrlTemplate() {\n    return '/task/:id';\n  }\n\n  static get datasetUrlTemplate() {\n    return '/dataset/:id';\n  }\n\n  static get aboutPageUrl() {\n    return `${UrlBuilder.basePath}/about`;\n  }\n\n  static get termsPageUrl() {\n    return `${UrlBuilder.basePath}/terms`;\n  }\n\n  static get submitPageUrl() {\n    return `${UrlBuilder.basePath}/submit`;\n  }\n\n  normalizeUrl(url) {\n    return url.toLowerCase();\n  }\n\n  getCanonicalUrl(url) {\n    return this.normalizeUrl(url).replace(UrlBuilder.basePath, '');\n  }\n\n  isHomeUrl(url) {\n    const canonicalUrl = this.getCanonicalUrl(url);\n    return canonicalUrl === '' || canonicalUrl === '/';\n  }\n\n  buildTaskUrl(task) {\n    const { id } = task;\n    const url = `${UrlBuilder.basePath}/task/${id}`;\n    return this.normalizeUrl(url);\n  }\n\n  isTaskUrl(url) {\n    return this.getCanonicalUrl(url).startsWith('/task');\n  }\n\n  getTaskId(url) {\n    return this.getCanonicalUrl(url).replace('/task/', '');\n  }\n\n  buildDatasetUrl(dataset) {\n    const { id } = dataset;\n    const url = `${UrlBuilder.basePath}/dataset/${id}`;\n    return this.normalizeUrl(url);\n  }\n\n  isDatasetUrl(url) {\n    return this.getCanonicalUrl(url).startsWith('/dataset');\n  }\n\n  getDatasetId(url) {\n    return this.getCanonicalUrl(url).replace('/dataset/', '');\n  }\n}\n\nexport default UrlBuilder;\n","import React from 'react';\nimport { Collapse } from 'react-collapse';\nimport data from '../data/homepage.json';\nimport './Homepage.scss';\nimport UrlBuilder from './UrlBuilder.js';\n\nclass Homepage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.urlBuilder = new UrlBuilder();\n    this.state = {\n      activeArea: null,\n    };\n  }\n\n  updateactiveArea(name) {\n    const { activeArea } = this.state;\n    this.setState({\n      activeArea: name !== activeArea ? name : null,\n    });\n  }\n\n  renderDataset(dataset) {\n    return (\n      <tr key={dataset.dataset}>\n        <td>{dataset.dataset}</td>\n        <td>{dataset.submission_count}</td>\n      </tr>\n    );\n  }\n\n  renderTaskSubmissions(task) {\n    if (!task.summary) {\n      return <span>No submissions</span>;\n    }\n    const { summary } = task;\n    return (\n      <table>\n        <tbody>\n          <tr>\n            <td>{summary.dataset_count}</td>\n            <td>{summary.dataset_count === 1 ? 'dataset' : 'datasets'}</td>\n          </tr>\n          <tr>\n            <td>{summary.submission_count}</td>\n            <td>{summary.submission_count === 1 ? 'submission' : 'submissions'}</td>\n          </tr>\n        </tbody>\n      </table>\n    );\n  }\n\n  renderAreaTask(task) {\n    return (\n      <a href={this.urlBuilder.buildTaskUrl(task)} className=\"task-tile-link\">\n        <div className=\"task-tile\" key={task.name}>\n          <h5>{task.name}</h5>\n          <div className=\"task-data\">{this.renderTaskSubmissions(task)}</div>\n        </div>\n      </a>\n    );\n  }\n\n  renderArea(area) {\n    const { activeArea } = this.state;\n    const { tasks, name } = area;\n\n    const isTileOpened = activeArea === name;\n\n    return (\n      <div key={area.name} className=\"tile-wrapper\">\n        <div onClick={() => this.updateactiveArea(name)} className=\"collapse-trigger\">\n          <h4>{area.name}</h4>\n        </div>\n        <Collapse isOpened={isTileOpened}>\n          <div className=\"task-wrapper\">\n            {tasks.map((currentTask) => this.renderAreaTask(currentTask))}\n            <div className=\"clear\" />\n          </div>\n        </Collapse>\n      </div>\n    );\n  }\n\n  render() {\n    const { areas } = data;\n    if (!this.state.activeArea) {\n      const defaultArea = areas[0];\n      this.setState({ activeArea: defaultArea.name });\n    }\n    return (\n      <>\n        <div className=\"intro\">\n          <p>\n            LiRo (<em>Li</em>mba <em>Ro</em>mână) provides a benchmark for Romanian language tasks.\n          </p>\n          <p>\n            The project keeps track of performance of different published models on the datasets and tasks listed below.\n            This allows easy comparison of different models and monitoring progress on these tasks and datasets over\n            time.\n          </p>\n        </div>\n        {areas.map((area) => this.renderArea(area))}\n      </>\n    );\n  }\n}\n\nexport default Homepage;\n","import React from 'react';\n\nexport const LogoIcon = () => (\n  <svg viewBox=\"0 0 16 16\" width=\"16\" height=\"16\">\n    <path\n      fillRule=\"evenodd\"\n      d=\"M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0016 8c0-4.42-3.58-8-8-8z\"\n    />\n  </svg>\n);\n\nexport const GraphIcon = () => (\n  <svg viewBox=\"0 0 16 16\" width=\"16\" height=\"16\">\n    <path\n      fillRule=\"evenodd\"\n      d=\"M1.5 1.75a.75.75 0 00-1.5 0v12.5c0 .414.336.75.75.75h14.5a.75.75 0 000-1.5H1.5V1.75zm14.28 2.53a.75.75 0 00-1.06-1.06L10 7.94 7.53 5.47a.75.75 0 00-1.06 0L3.22 8.72a.75.75 0 001.06 1.06L7 7.06l2.47 2.47a.75.75 0 001.06 0l5.25-5.25z\"\n    />\n  </svg>\n);\n\nexport const CodeIcon = () => (\n  <svg viewBox=\"0 0 512 512\" width=\"16\" height=\"16\">\n    <path\n      fillRule=\"evenodd\"\n      fill=\"#fff\"\n      d=\"M256 32C132.3 32 32 134.9 32 261.7c0 101.5 64.2 187.5 153.2 217.9a17.56 17.56 0 003.8.4c8.3 0 11.5-6.1 11.5-11.4 0-5.5-.2-19.9-.3-39.1a102.4 102.4 0 01-22.6 2.7c-43.1 0-52.9-33.5-52.9-33.5-10.2-26.5-24.9-33.6-24.9-33.6-19.5-13.7-.1-14.1 1.4-14.1h.1c22.5 2 34.3 23.8 34.3 23.8 11.2 19.6 26.2 25.1 39.6 25.1a63 63 0 0025.6-6c2-14.8 7.8-24.9 14.2-30.7-49.7-5.8-102-25.5-102-113.5 0-25.1 8.7-45.6 23-61.6-2.3-5.8-10-29.2 2.2-60.8a18.64 18.64 0 015-.5c8.1 0 26.4 3.1 56.6 24.1a208.21 208.21 0 01112.2 0c30.2-21 48.5-24.1 56.6-24.1a18.64 18.64 0 015 .5c12.2 31.6 4.5 55 2.2 60.8 14.3 16.1 23 36.6 23 61.6 0 88.2-52.4 107.6-102.3 113.3 8 7.1 15.2 21.1 15.2 42.5 0 30.7-.3 55.5-.3 63 0 5.4 3.1 11.5 11.4 11.5a19.35 19.35 0 004-.4C415.9 449.2 480 363.1 480 261.7 480 134.9 379.7 32 256 32z\"\n    />\n  </svg>\n);\n\nexport const PaperIcon = () => (\n  <svg viewBox=\"0 0 512 512\" width=\"16\" height=\"16\">\n    <path d=\"M428 224H288a48 48 0 01-48-48V36a4 4 0 00-4-4h-92a64 64 0 00-64 64v320a64 64 0 0064 64h224a64 64 0 0064-64V228a4 4 0 00-4-4z\" />\n    <path d=\"M419.22 188.59L275.41 44.78a2 2 0 00-3.41 1.41V176a16 16 0 0016 16h129.81a2 2 0 001.41-3.41z\" />\n  </svg>\n);\n\nexport const CheckIcon = () => (\n  <svg viewBox=\"0 0 512 512\" width=\"16\" height=\"16\">\n    <path d=\"M416 128L192 384l-96-96\" />\n  </svg>\n);\n\nexport const CrossIcon = () => (\n  <svg viewBox=\"0 0 512 512\" width=\"16\" height=\"16\">\n    <path d=\"M289.94 256l95-95A24 24 0 00351 127l-95 95-95-95a24 24 0 00-34 34l95 95-95 95a24 24 0 1034 34l95-95 95 95a24 24 0 0034-34z\" />\n  </svg>\n);\n","import React from 'react';\nimport data from '../data/tasks.json';\nimport { CodeIcon } from '../assets/icons';\nimport UrlBuilder from './UrlBuilder';\nimport './TaskDetails.scss';\n\nclass TaskDetails extends React.Component {\n  constructor(props) {\n    super(props);\n    this.taskId = props.match.params.id;\n    this.task = data.tasks.find((t) => t.id === this.taskId);\n    this.urlBuilder = new UrlBuilder();\n  }\n\n  renderPaper(paper_link, paper_title) {\n    if (paper_link) {\n      return (\n        <a href={paper_link} target=\"_blank\" rel=\"noopener noreferrer\">\n          {paper_title}\n        </a>\n      );\n    }\n    return { paper_title };\n  }\n\n  renderModelRow(dataset) {\n    const { dataset_name, dataset_id, model_name, paper_title, paper_link, source_link } = dataset;\n    return (\n      <tr key={model_name}>\n        <td>\n          {' '}\n          <a href={this.urlBuilder.buildDatasetUrl({ id: dataset_id })}>{dataset_name}</a>\n        </td>\n        <td>\n          {' '}\n          <a href={this.urlBuilder.buildDatasetUrl({ id: dataset_id })}>{model_name}</a>\n        </td>\n        <td>{this.renderPaper(paper_link, paper_title)}</td>\n        <td>\n          {source_link && (\n            <a href={source_link} target=\"_blank\" rel=\"noopener noreferrer\">\n              <CodeIcon />\n            </a>\n          )}\n        </td>\n      </tr>\n    );\n  }\n\n  renderTaskDatasets(datasets) {\n    if (!datasets || datasets.length === 0) {\n      return <p>There are no submissions for this task.</p>;\n    }\n\n    return (\n      <table className=\"table\">\n        <thead>\n          <tr>\n            <td>Dataset</td>\n            <td>Best model</td>\n            <td>Paper</td>\n            <td>Code</td>\n          </tr>\n        </thead>\n        <tbody>{datasets.map((ds) => this.renderModelRow(ds))}</tbody>\n      </table>\n    );\n  }\n\n  render() {\n    const { datasets } = this.task;\n    return (\n      <div className=\"task-details\">\n        <h3>{this.task.task_name}</h3>\n        <p className=\"task-description\">{this.task.task_description}</p>\n        <h4> Benchmarks</h4>\n        {this.renderTaskDatasets(datasets)}\n      </div>\n    );\n  }\n}\n\nexport default TaskDetails;\n","import React, { Component } from 'react';\nimport { select, scaleLinear, scalePoint, extent, axisLeft, axisBottom } from 'd3';\n\nclass ScatterPlot extends Component {\n  constructor(props) {\n    super(props);\n    this.svgRef = React.createRef();\n  }\n\n  componentDidMount() {\n    const { timeRange, dataPoints, width, height } = this.props;\n    this.drawScatterPlot(timeRange, dataPoints, width, height);\n  }\n\n  componentDidUpdate() {\n    const { timeRange, dataPoints, width, height } = this.props;\n    this.drawScatterPlot(timeRange, dataPoints, width, height);\n  }\n\n  drawScatterPlot(xScaleDomain, dataPoints, width, height) {\n    const circleRadius = 5;\n\n    const svg = select(this.svgRef.current).attr('width', width).attr('height', height);\n    svg.selectAll('*').remove();\n\n    const title = 'Task leaderboard';\n\n    const xValue = (d) => d.submissionDate;\n    const xAxisLabel = 'Submission date';\n    const yValue = (d) => d.score;\n    const yAxisLabel = 'Score';\n\n    const margin = { top: 60, right: 40, bottom: 88, left: 150 };\n    const innerWidth = width - margin.left - margin.right;\n    const innerHeight = height - margin.top - margin.bottom;\n\n    const xScale = scalePoint().domain(xScaleDomain).range([0, innerWidth]);\n\n    const yScale = scaleLinear().domain(extent(dataPoints, yValue)).range([innerHeight, 0]).nice();\n\n    const g = svg.append('g').attr('transform', `translate(${margin.left},${margin.top})`);\n\n    const xAxis = axisBottom(xScale).tickSize(-innerHeight).tickPadding(15);\n\n    const yAxis = axisLeft(yScale).tickSize(-innerWidth).tickPadding(10);\n\n    const yAxisG = g.append('g').call(yAxis);\n    yAxisG.selectAll('.domain').remove();\n\n    yAxisG\n      .append('text')\n      .attr('class', 'axis-label')\n      .attr('y', -55)\n      .attr('x', -innerHeight / 2)\n      .attr('fill', 'black')\n      .attr('transform', `rotate(-90)`)\n      .attr('text-anchor', 'middle')\n      .text(yAxisLabel);\n\n    const xAxisG = g.append('g').call(xAxis).attr('transform', `translate(0,${innerHeight})`);\n\n    xAxisG.select('.domain').remove();\n\n    xAxisG\n      .append('text')\n      .attr('class', 'axis-label')\n      .attr('y', 50)\n      .attr('x', innerWidth / 2)\n      .attr('fill', 'black')\n      .text(xAxisLabel);\n\n    const tooltip = select('.canvas')\n      .append('div')\n      .style('opacity', 0)\n      .attr('class', 'tooltip')\n      .style('background-color', 'white')\n      .style('border', 'solid')\n      .style('border-width', '1px')\n      .style('border-radius', '5px')\n      .style('padding', '10px');\n\n    const mouseOver = (evt, data) => tooltip.style('opacity', 1).html(`<b>${data.model}</b>: ${yValue(data)}`);\n\n    const mouseMove = (evt) => {\n      const leftPos = evt.clientX + 10;\n      const topPos = evt.clientY;\n      return tooltip.style('left', `${leftPos}px`).style('top', `${topPos}px`);\n    };\n\n    const mouseLeave = () => tooltip.transition().duration(200).style('opacity', 0);\n\n    g.selectAll('circle')\n      .data(dataPoints)\n      .enter()\n      .append('circle')\n      .attr('cy', (d) => yScale(yValue(d)))\n      .attr('cx', (d) => xScale(xValue(d)))\n      .attr('r', circleRadius)\n      .on('mouseover', mouseOver)\n      .on('mousemove', mouseMove)\n      .on('mouseleave', mouseLeave);\n\n    g.append('text')\n      .attr('class', 'title')\n      .attr('x', innerWidth / 2)\n      .attr('y', -30)\n      .attr('text-anchor', 'middle')\n      .text(title);\n  }\n\n  render() {\n    return (\n      <>\n        <svg ref={this.svgRef} />\n      </>\n    );\n  }\n}\nexport default ScatterPlot;\n","import React, { Component } from 'react';\nimport ScatterPlot from './ScatterPlot';\n\nclass PlotBuilder extends Component {\n  constructor(props) {\n    super(props);\n    this.dataset = props.dataset;\n    this.handleSelectedMetricChange = this.handleSelectedMetricChange.bind(this);\n    this.canvas = React.createRef();\n    this.onWindowResize = this.onWindowResize.bind(this);\n    this.state = {\n      timeRange: this.dataset.time_range,\n      dataPoints: this.buildDataPoints(this.dataset.preferred_metric),\n      width: undefined,\n      height: undefined,\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener('resize', this.onWindowResize);\n    this.onWindowResize();\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.onWindowResize);\n  }\n\n  buildDataPoints = (metric) =>\n    this.dataset.data_points.map((p) => ({\n      model: p.model,\n      submissionDate: p.submission_date,\n      score: p[metric],\n    }));\n\n  onWindowResize() {\n    const canvas = this.canvas.current;\n    const bounds = canvas.getBoundingClientRect();\n    this.setState({ width: bounds.width, height: bounds.height });\n  }\n\n  handleSelectedMetricChange(e) {\n    const metric = e.target.value;\n    if (!metric) return;\n    this.setState({\n      dataPoints: this.buildDataPoints(metric),\n    });\n  }\n\n  render() {\n    return (\n      <>\n        <div ref={this.canvas} className=\"canvas\">\n          <ScatterPlot\n            timeRange={this.state.timeRange}\n            dataPoints={this.state.dataPoints}\n            width={this.state.width}\n            height={this.state.height}\n          />\n        </div>\n        <div id=\"select-metric-group\" className=\"input-group input-group-sm\">\n          <div className=\"input-group-prepend\">\n            <label className=\"input-group-text\" htmlFor=\"metrics\">\n              View scores for:\n            </label>\n          </div>\n          <select\n            className=\"custom-select\"\n            name=\"metrics\"\n            defaultValue={this.dataset.preferred_metric}\n            onChange={this.handleSelectedMetricChange}\n          >\n            {this.dataset.metrics.map((m) => (\n              <option key={m} value={m}>\n                {m}\n              </option>\n            ))}\n          </select>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default PlotBuilder;\n","import React from 'react';\nimport { FaSortUp, FaSortDown, FaSort } from 'react-icons/fa';\nimport './ModelScoresTable.scss';\nimport { CodeIcon, CheckIcon, CrossIcon } from '../assets/icons';\n\nclass ModelScoresTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.models = props.models;\n    this.metrics = props.metrics;\n    this.state = {\n      sortDirection: 'default',\n      sortBy: 'default',\n    };\n\n    this.onSort = this.onSort.bind(this);\n    this.sortFunction = this.sortFunction.bind(this);\n  }\n\n  onSort(metric) {\n    const { sortDirection } = this.state;\n    let nextSortDirection;\n    if (sortDirection === 'default') {\n      nextSortDirection = 'descending';\n    }\n    if (sortDirection === 'descending') {\n      nextSortDirection = 'ascending';\n    }\n    if (sortDirection === 'ascending') {\n      nextSortDirection = 'default';\n    }\n\n    this.setState({\n      sortDirection: nextSortDirection,\n      sortBy: metric,\n    });\n  }\n\n  sortFunction(a, b) {\n    const { sortDirection, sortBy } = this.state;\n    let valA = a.results[sortBy];\n    let valB = b.results[sortBy];\n\n    if (sortDirection === 'ascending') {\n      return valA - valB;\n    }\n\n    if (sortDirection === 'descending') {\n      return valB - valA;\n    }\n\n    return 0;\n  }\n\n  renderModel(model, rank) {\n    return (\n      <tr>\n        <td>{rank}</td>\n        <td>{model.model}</td>\n        {this.metrics.map((m) => (\n          <td>{model.results[m]}</td>\n        ))}\n        <td className=\"td-extra-training-data\">{model.extra_training_data ? <CheckIcon /> : <CrossIcon />}</td>\n        <td>{model.model_size}</td>\n        <td>\n          <a href={model.paper_link} target=\"_blank\" rel=\"noopener noreferrer\">\n            {model.paper_title}\n          </a>\n        </td>\n        <td>\n          {model.source_link && (\n            <a href={model.source_link} target=\"_blank\" rel=\"noopener noreferrer\">\n              <CodeIcon />\n            </a>\n          )}\n        </td>\n        <td>{model.submission_date}</td>\n      </tr>\n    );\n  }\n\n  renderSortButton() {\n    const { sortDirection } = this.state;\n    if (sortDirection === 'ascending') {\n      return <FaSortUp />;\n    }\n    if (sortDirection === 'descending') {\n      return <FaSortDown />;\n    }\n    return <FaSort />;\n  }\n\n  render() {\n    return (\n      <table className=\"table dataset-details\">\n        <thead>\n          <tr>\n            <td>Rank</td>\n            <td>Model</td>\n            {this.metrics.map((m) => (\n              <td>\n                {m}\n                <button type=\"button\" onClick={() => this.onSort(m)}>\n                  {this.renderSortButton()}\n                </button>\n              </td>\n            ))}\n            <td>Extra training data</td>\n            <td>Model size</td>\n            <td>Paper</td>\n            <td>Code</td>\n            <td>Submitted</td>\n          </tr>\n        </thead>\n        <tbody>{[...this.models].sort(this.sortFunction).map((m, rank) => this.renderModel(m, rank))}</tbody>\n      </table>\n    );\n  }\n}\n\nexport default ModelScoresTable;\n","import React from 'react';\nimport ReactHtmlParser from 'react-html-parser';\nimport './DatasetDetails.scss';\nimport UrlBuilder from './UrlBuilder';\nimport PlotBuilder from './PlotBuilder';\nimport ModelScoresTable from './ModelScoresTable';\nimport data from '../data/datasets.json';\n\nclass DatasetDetails extends React.Component {\n  constructor(props) {\n    super(props);\n    this.datasetId = props.match.params.id;\n    this.dataset = data.datasets.find((ds) => ds.id === this.datasetId);\n    this.urlBuilder = new UrlBuilder();\n  }\n\n  render() {\n    return (\n      <>\n        <h3 className=\"dataset-title\">{this.dataset.dataset_name}</h3>\n        <div className=\"dataset-description\">{ReactHtmlParser(this.dataset.dataset_description)}</div>\n        <table className=\"dataset-info\">\n          <tbody>\n            <tr>\n              <th>Source</th>\n              <td>\n                <a href={this.dataset.dataset_link} target=\"_blank\" rel=\"noopener noreferrer\">\n                  {this.dataset.dataset_link}\n                </a>\n              </td>\n            </tr>\n            <tr>\n              <th>License</th>\n              <td>\n                {this.dataset.license_url ? (\n                  <a href={this.dataset.license_url} target=\"_blank\" rel=\"noopener noreferrer\">\n                    {this.dataset.license}\n                  </a>\n                ) : (\n                  this.dataset.license\n                )}\n              </td>\n            </tr>\n          </tbody>\n        </table>\n        <div className=\"add-model-link\">\n          <a href={UrlBuilder.submitPageUrl}>Add model</a>\n        </div>\n        <PlotBuilder dataset={this.dataset} />\n        <ModelScoresTable models={this.dataset.models} metrics={this.dataset.metrics} />\n      </>\n    );\n  }\n}\n\nexport default DatasetDetails;\n","import React from 'react';\nimport './AboutPage.scss';\nimport datasets_info from '../data/datasets.json';\nimport tasks_info from '../data/tasks.json';\nimport UrlBuilder from './UrlBuilder';\n\nconst AboutPage = () => (\n  <>\n    <h1>Who are we?</h1>\n    <p>\n      We are a group of Romanians with expertise in Machine Learning, NLP, linguistics, and data privacy. Our goal is to\n      accelerate progress in AI research on Romanian language tasks.\n    </p>\n    <h1>\n      What is the LiRo (<em>Limba Română</em>) project?\n    </h1>\n    <h2>Benchmark</h2>\n    <p>\n      LiRo provides a benchmark for Romanian language tasks. It contains {tasks_info.tasks.length} tasks on{' '}\n      {datasets_info.datasets.length} datasets: {tasks_info.tasks.length} existing in the literature, {0} newly created\n      through our team’s efforts.\n    </p>\n    <h2>Leaderboard</h2>\n    <p>\n      LiRo keeps track of performance of different published models on the datasets and tasks listed above. This allows\n      easy comparison of different models and monitoring progress on these tasks and datasets over time.\n    </p>\n    <h2>Starter code</h2>\n    <p>\n      Contains scripts for downloading the datasets and computing various metrics for the tasks listed above. As this\n      project is ongoing, we will add as soon as possible starter code for tasks that do not yet have it.\n    </p>\n    <h1>How can you contribute?</h1>\n    <p>\n      To add your model to the leaderboard, use the starter code to evaluate your model’s performance and{' '}\n      <a href={UrlBuilder.submitPageUrl}>submit</a> your results, together with the paper and/or GitHub repo.\n    </p>\n    <p>\n      If you have a relevant dataset that is not included, please contact us to see how we can add it to the\n      leaderboard. The more the better.\n    </p>\n    <h1>Team</h1>\n    <ul>\n      <li>Adriana Stan, Associate Professor (Technical University of Cluj-Napoca)</li>\n      <li>Beáta Lőrincz, PhD student (”Babeș-Bolyai” University, Technical University of Cluj-Napoca)</li>\n      <li>Cristina Victoria Iacobescu, Attorney-at-law, Reff & Associates (member of Deloitte Legal)</li>\n      <li>George-Andrei Dima, MSc student (Politehnica University of Bucharest)</li>\n      <li>Lorena Roșia, Attorney-at-law, Reff & Associates (member of Deloitte Legal)</li>\n      <li>Luciana Morogan, Associate Professor (Military Technical Academy Ferdinand Bucharest)</li>\n      <li>Madalina Chitez, Researcher (West University of Timisoara, CODHUS Research Centre)</li>\n      <li>Petru Rebeja, PhD student (Alexandru Ioan Cuza University of Iași, AIRomania)</li>\n      <li>Radu Tudor Ionescu (University of Bucharest)</li>\n      <li>Razvan Pascanu, Research Scientist (DeepMind, EEML, AIRomania)</li>\n      <li>Ștefan Daniel Dumitrescu, NLP Independent Researcher</li>\n      <li>Traian Rebedea, Associate Professor (Politehnica University of Bucharest)</li>\n      <li>Viorica Patraucean, Research Scientist (DeepMind, EEML, AIRomania)</li>\n    </ul>\n  </>\n);\n\nexport default AboutPage;\n","import React from 'react';\n\nconst TermsPage = () => (\n  <>\n    <h1 id=\"terms\">Terms and Conditions</h1>\n    <h1 id=\"privacy\">Privacy notice</h1>\n  </>\n);\n\nexport default TermsPage;\n","import React from 'react';\nimport './SubmitPage.scss';\nimport Button from 'react-bootstrap/Button';\n\nconst SubmitPage = () => (\n  <>\n    <h1 id=\"guide-on-how-to-submit-a-new-model\">Guide on how to submit a new model</h1>\n    <p>\n      Submitting a new model to the leaderboard is easy! Simply{' '}\n      <a href=\"https://github.com/eemlcommunity/ro_benchmark_leaderboard/issues/new/choose\">create a new issue</a> and\n      click on the <code>Get started</code> button to the right of the <code>Submit new model</code> template. Please\n      fill in with all the info requested in the template, as well as all extra info you wish to let us know about your\n      model. We’ll review your submission and add it to the leaderboard, that’s it!\n    </p>\n    <p>\n      Here’s a step-by-step guide on how to add a new model. Let’s assume you have a new Named Entity Recognition (NER)\n      model that you wish to submit; after starting a new model issue template, you’ll have to fill in a number of\n      fields:\n    </p>\n    <ul>\n      <li>\n        <p>\n          <code>Model name</code> Please write here your model name. If you didn’t name your model, you’d help the\n          community a lot by writing here the underlying models/methods used. For example, if your NER model model is\n          based on a BERT and a CRF on top, please write it as <code>BERT + CRF</code>. Or if it is an ensemble of\n          LSTMs, write <code>RNN Ensemble</code>, etc.\n        </p>\n      </li>\n      <li>\n        <p>\n          <code>Task(s)</code> Please write here the task that your model participates in. For example, you would write\n          here <code>NER</code>\n        </p>\n      </li>\n      <li>\n        <p>\n          <code>Dataset(s)</code> Please write here the datasets your model trains/runs on. For example{' '}\n          <code>RONEC - Romanian Named Entity Corpus v1</code>. Please list here <strong>all</strong> the datasets you\n          have run your model on.\n        </p>\n      </li>\n      <li>\n        <p>\n          <code>External training data</code> Yes/No if your model was trained on external data. Any training data that\n          is <em>not</em> in the dataset you are submitting results to, and you have used to train your model on, will\n          automatically lead to a <code>Yes</code> at this question. <em>Note</em>: pretrained transformers (or any\n          other general, non-task/dataset oriented pretraining) does not count as external training data.\n        </p>\n      </li>\n      <li>\n        <p>\n          <code>Model size</code> <em>[Optional]</em> Please write here the number of parameters in millions. Eg, if you\n          used a BERT-base and a CRF, you’d probably write <code>110M</code>. It’s very easy to count the number of\n          parameters. Practically, in all current ML plaforms, getting this number is one line of code.\n        </p>\n      </li>\n      <li>\n        <p>\n          <code>Paper title</code> <em>[Optional]</em> If you have a published paper, list name here.\n        </p>\n      </li>\n      <li>\n        <p>\n          <code>Paper link</code> <em>[Optional]</em> input URL here; e.g. link to arxiv.org paper&gt;\n        </p>\n      </li>\n      <li>\n        <p>\n          <code>Source code</code> <em>[Optional]</em> input link to Github or other code repository here&gt;\n        </p>\n      </li>\n      <li>\n        <p>\n          <code>Results</code>: Please list your model’s metrics/results, one per line, like:{' '}\n          <code>[Dataset], [Metric], [Value]</code>.\n        </p>\n      </li>\n    </ul>\n    <h2 id=\"example-submission\">Example submission:</h2>\n    <pre>\n      <code>\n        Model name: BERT + CRF\n        <br />\n        Task(s): NER\n        <br />\n        Dataset(s): RONEC - Romanian Named Entity Corpus v1\n        <br />\n        External training data: No\n        <br />\n        Model size: 110M\n        <br />\n        Paper title: (no paper yet)\n        <br />\n        Paper link: -\n        <br />\n        Source code: http://github.com/username/my_ner_repo\n        <br />\n        <br />\n        Results:\n        <br />\n        RONEC - Romanian Named Entity Corpus v1, F1, 91.50\n        <br />\n        RONEC - Romanian Named Entity Corpus v1, Precision, 92.00\n        <br />\n        RONEC - Romanian Named Entity Corpus v1, Recall, 91.00\n      </code>\n    </pre>\n    <h2 id=\"other-considerations\">Other considerations:</h2>\n    <ul>\n      <li>\n        If you have sumbitted a model to this leaderboard, <strong>but</strong> your paper was not published at the\n        time, reopen the issue an let us know about the paper (title + link). Similarly, reopen your issue regarding\n        source code availability, or any other changes you need to make to your submission.\n      </li>\n    </ul>\n    <hr />\n    <Button variant=\"primary\" href=\"https://github.com/eemlcommunity/ro_benchmark_leaderboard/issues/new/choose\">\n      Submit your model\n    </Button>\n  </>\n);\n\nexport default SubmitPage;\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Homepage from './Homepage';\nimport UrlBuilder from './UrlBuilder';\nimport TaskDetails from './TaskDetails';\nimport DatasetDetails from './DatasetDetails';\nimport AboutPage from './AboutPage';\nimport TermsPage from './TermsPage';\nimport SubmitPage from './SubmitPage';\n\nconst Dashboard = (props) => {\n  const { location } = props;\n  return (\n    <Switch location={location}>\n      <Route exact path=\"/about\" component={AboutPage} />\n      <Route exact path=\"/submit\" component={SubmitPage} />\n      <Route exact path={UrlBuilder.taskUrlTemplate} component={TaskDetails} />\n      <Route exact path={UrlBuilder.datasetUrlTemplate} component={DatasetDetails} />\n      <Route exact path=\"/terms\" component={TermsPage} />\n      <Route path=\"/\" component={Homepage} />\n    </Switch>\n  );\n};\n\nexport default Dashboard;\n","import React from 'react';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport { LogoIcon, CodeIcon } from '../assets/icons';\nimport '../assets/menu.scss';\nimport UrlBuilder from './UrlBuilder';\nimport './Header.scss';\n\nconst Header = () => (\n  <Navbar collapseOnSelect expand=\"lg\">\n    <div className=\"logo-wrapper\">\n      <Navbar.Brand href=\"/ro_benchmark_leaderboard\">\n        <LogoIcon />\n        <div className=\"logo-text\">\n          {' '}\n          LiRo <br /> BENCHMARK{' '}\n        </div>\n      </Navbar.Brand>\n    </div>\n    <Navbar.Toggle aria-controls=\"menu-responsive\" />\n    <Navbar.Collapse id=\"menu-responsive\" className=\"justify-content-end\">\n      <Nav>\n        <Nav.Link href=\"/ro_benchmark_leaderboard\">Home</Nav.Link>\n        <Nav.Link href={UrlBuilder.submitPageUrl}>Submit</Nav.Link>\n        <Nav.Link href={UrlBuilder.aboutPageUrl}>About</Nav.Link>\n        <Nav.Link href={UrlBuilder.termsPageUrl}>Legal</Nav.Link>\n        <Nav.Link\n          className=\"code-btn\"\n          href=\"https://github.com/eemlcommunity/ro_benchmark_leaderboard\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          id=\"code-btn\"\n        >\n          <CodeIcon />\n          <span>GitHub</span>\n        </Nav.Link>\n      </Nav>\n    </Navbar.Collapse>\n  </Navbar>\n);\n\nexport default Header;\n","import React from 'react';\nimport Breadcrumb from 'react-bootstrap/Breadcrumb';\nimport UrlBuilder from './UrlBuilder.js';\nimport taskData from '../data/tasks.json';\nimport datasetData from '../data/datasets.json';\n\nclass AppBreadcrumbs extends React.Component {\n  constructor(props) {\n    super(props);\n    this.urlBuilder = new UrlBuilder();\n    this.urlMap = {\n      '/about': 'About',\n      '/submit': 'Submit your model',\n      '/terms': 'Terms and Conditions',\n    };\n  }\n\n  getTaskName(url) {\n    if (this.urlBuilder.isTaskUrl(url)) {\n      const taskId = this.urlBuilder.getTaskId(url);\n      const task = taskData.tasks.find((t) => t.id === taskId);\n      return task.task_name;\n    }\n\n    if (this.urlBuilder.isDatasetUrl(url)) {\n      const datasetId = this.urlBuilder.getDatasetId(url);\n      const dataset = datasetData.datasets.find((d) => d.id === datasetId);\n      return dataset.task;\n    }\n\n    return null;\n  }\n\n  getTaskUrl(url) {\n    if (this.urlBuilder.isDatasetUrl(url)) {\n      const datasetId = this.urlBuilder.getDatasetId(url);\n      const dataset = datasetData.datasets.find((d) => d.id === datasetId);\n      const task = taskData.tasks.find((t) => t.task_name === dataset.task);\n      return this.urlBuilder.buildTaskUrl(task);\n    }\n\n    return null;\n  }\n\n  getDatasetName(url) {\n    if (this.urlBuilder.isDatasetUrl(url)) {\n      const datasetId = this.urlBuilder.getDatasetId(url);\n      const dataset = datasetData.datasets.find((d) => d.id === datasetId);\n      return dataset.dataset_name.replace(` - ${dataset.task}`, '').trim();\n    }\n\n    return null;\n  }\n\n  isOtherUrl(url) {\n    const isHome = this.urlBuilder.isHomeUrl(url);\n    const isTask = this.urlBuilder.isTaskUrl(url);\n    const isDataset = this.urlBuilder.isDatasetUrl(url);\n    return !(isHome || isTask || isDataset);\n  }\n\n  render() {\n    const path = window.location.pathname;\n    if (this.urlBuilder.isHomeUrl(path)) {\n      return null;\n    }\n    return (\n      <>\n        <Breadcrumb>\n          <Breadcrumb.Item href={UrlBuilder.basePath}>Home</Breadcrumb.Item>\n          {this.urlBuilder.isTaskUrl(path) && <Breadcrumb.Item active>{this.getTaskName(path)}</Breadcrumb.Item>}\n          {this.urlBuilder.isDatasetUrl(path) && (\n            <>\n              <Breadcrumb.Item href={this.getTaskUrl(path)}>{this.getTaskName(path)}</Breadcrumb.Item>\n              <Breadcrumb.Item active>{this.getDatasetName(path)}</Breadcrumb.Item>\n            </>\n          )}\n          {this.isOtherUrl(path) && (\n            <Breadcrumb.Item active>{this.urlMap[this.urlBuilder.getCanonicalUrl(path)]}</Breadcrumb.Item>\n          )}\n        </Breadcrumb>\n      </>\n    );\n  }\n}\n\nexport default AppBreadcrumbs;\n","import React from 'react';\nimport UrlBuilder from './UrlBuilder';\nimport './Footer.scss';\n\nclass Footer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.urlBuilder = new UrlBuilder();\n  }\n\n  render = () => (\n    <footer className=\"footer\">\n      <div className=\"footer-content\">\n        <div className=\"footer-message\">\n          Contact us at <a href=\"mailto:contact@eeml.eu\">contact@eeml.eu</a>. Follow us on{' '}\n          <a href=\"https://twitter.com/EEMLcommunity\">Twitter</a>.\n        </div>\n        <div className=\"footer-space\"> </div>\n        <div className=\"footer-link\">\n          <a href={UrlBuilder.aboutPageUrl}>About</a>\n        </div>\n        <div className=\"footer-link\">\n          <a href={UrlBuilder.termsPageUrl}>Legal</a>\n        </div>\n      </div>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React from 'react';\nimport Dashboard from './Components/Dashboard';\nimport Header from './Components/Header';\nimport AppBreadcrumbs from './Components/AppBreadcrumbs';\nimport Footer from './Components/Footer';\nimport './assets/root.scss';\n\nconst App = (props) => {\n  const { location } = props;\n  return (\n    <div>\n      <Header />\n      <AppBreadcrumbs />\n      <div className=\"main-content\">\n        <Dashboard location={location} />\n      </div>\n      <Footer />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport WebFont from 'webfontloader';\nimport App from './App';\n\nWebFont.load({\n  google: {\n    families: ['Roboto:300,400,700', 'sans-serif'],\n  },\n});\n\nReactDOM.render(\n  <BrowserRouter basename=\"/ro_benchmark_leaderboard\">\n    <Route path=\"/\" component={App} />\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}